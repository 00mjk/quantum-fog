#include "DET_ND.h"#ifdef   _mac_gui_app //''''''''''''''''''''''''''''''''''''''''''''\\.	#include "StCPTstate.h"	#include "C_DET_ND_AMP_GEN.h"#endif //_mac_gui_app \\............................................//#pragma mark --creation/destruction--//******************************************DET_ND::DET_ND(){}//******************************************DET_ND::~DET_ND(){}//******************************************#pragma mark ----used only with macgui----	#ifdef   _mac_gui_app //''''''''''''''''''''''''''''''''''''''''''''\\.#pragma mark --creation/destruction--//******************************************DET_ND::DET_ND(const Point  &	 m_down_pt)		//in	:NODE( m_down_pt),	its_color(C_COLORS::its_black){}#pragma mark --drawing--//******************************************VOID	DET_ND::draw(){//drawer	its_efield_p->Draw(0);	if(!its_efield_p->GetSuperView()->FocusDraw())return;	if(its_state_num_for_cap!=max_ushort) draw_state_cap();	StCPTstate		saved_st(true, true, false);	saved_st.Normalize(); 	// first draw colored mask:		::RGBForeColor(&its_color);	Rect r;	::SetRect(&r, 	its_center.h - mask_rad, its_center.v - mask_rad, 					its_center.h + mask_rad, its_center.v + mask_rad);	::PaintOval(&r);		//now draw black rim:	::RGBForeColor(&C_COLORS::its_black);		::FrameOval(&r);}#pragma mark --amp gen--//******************************************VOID	DET_ND::call_amp_gen(QB_NET *  net_p, 		//inC_PI_WIND * pi_wind_p)	//in{	if(its_amp_gen_p==0){//set to nil in NODE::NODE() and NODE::NODE(const Point  & center)		its_amp_gen_p = new C_DET_ND_AMP_GEN(this, net_p, pi_wind_p);		//delete:  by NODE::~NODE()						//Created first time it is used		ThrowIfNil_(its_amp_gen_p );	}	its_amp_gen_p->talk();}#endif //_mac_gui_app \\............................................//	