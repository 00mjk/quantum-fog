#pragma once#include "QFog_constants.h"#include "NODE.h"#ifdef   _mac_gui_app //''''''''''''''''''''''''''''''''''''''''''''\\.	class QB_NET;	class C_PI_WIND;	class C_QBIT_ROT_AMP_GEN;#endif //_mac_gui_app \\............................................////******************************************class QBIT_ROT: public NODE{private:public:	QBIT_ROT();	virtual ~QBIT_ROT();#ifdef   _mac_gui_app //''''''''''''''''''''''''''''''''''''''''''''\\.private:	// The node has one s/d port that can carry unlimited s and d loads.	// loc = the center of the icon,	// greeting_rad = sel_rad	// docking_rad = mask_radpublic:	QBIT_ROT( const Point  &  m_down_pt);	STRINGY			get_class_str();	ND_CLASS_ID		get_class_id();		VOID  	draw();	VOID	call_amp_gen(QB_NET *  net_p, C_PI_WIND * pi_wind_p);	VOID	obey_amp_gen();#endif //_mac_gui_app \\............................................//};#pragma mark -#ifdef   _mac_gui_app //''''''''''''''''''''''''''''''''''''''''''''\\.//******************************************inlineSTRINGY		QBIT_ROT::get_class_str(){	return "QBIT_ROT";}//******************************************inlineND_CLASS_ID		QBIT_ROT::get_class_id(){	return QBIT_ROT_id;}#endif //_mac_gui_app \\............................................//