#pragma once#include "QFog_constants.h"#include "VECTOR.h"#include "STRINGY.h"#include "NODE.h"#include "STRETCH_OR_FOLD.h"#ifdef   _mac_gui_app //''''''''''''''''''''''''''''''''''''''''''''\\.	class QB_NET;	class C_PI_WIND;	class C_SG_MAGNET_AMP_GEN;#endif //_mac_gui_app \\............................................////SG = Stern-Gerlach//******************************************class SG_MAGNET: public NODE{private:public:	SG_MAGNET();	virtual ~SG_MAGNET();#ifdef   _mac_gui_app //''''''''''''''''''''''''''''''''''''''''''''\\.private:	// The node has one s/d port that can carry unlimited s and d loads.	// loc = the center of the icon,	// greeting_rad = sel_rad	// docking_rad = mask_radpublic:	SG_MAGNET( const Point  &  m_down_pt);	STRINGY			get_class_str();	ND_CLASS_ID		get_class_id();		VOID 	set_st_names_to_default();	VOID  	draw();	virtual  VOID  		add_in_nd(USHORT nd_id, USHORT nd_degen);	virtual  VOID  		del_in_nd(USHORT nd_id);		virtual  VOID		reorder_in_nds(const UI_MAP  &  map, BOOLEAN touch_tm);		VOID	call_amp_gen(QB_NET *  net_p, C_PI_WIND * pi_wind_p);		VOID	obey_amp_gen(const USHORT * in_sums_p, const USHORT * in_rows_p, const SHORT * in_spins_p);#endif //_mac_gui_app \\............................................//};#pragma mark -#ifdef   _mac_gui_app //''''''''''''''''''''''''''''''''''''''''''''\\.//******************************************inlineSTRINGY		SG_MAGNET::get_class_str(){	return "SG_MAGNET";}//******************************************inlineND_CLASS_ID		SG_MAGNET::get_class_id(){	return SG_MAGNET_id;}#endif //_mac_gui_app \\............................................//