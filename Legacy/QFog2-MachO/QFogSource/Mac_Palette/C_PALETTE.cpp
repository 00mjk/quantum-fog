#include "C_PALETTE.h"#include "C_APP.h"#pragma mark --creation/destruction--//******************************************C_PALETTE::C_PALETTE(LStream  *		inStream)	//in	:LWindow(inStream),	its_popup_p(0),	its_table_p(0),	its_swatch_p(0),	its_cur_tool(selection_tool){}//******************************************C_PALETTE::C_PALETTE()	:its_popup_p(0),	its_table_p(0),	its_swatch_p(0),	its_cur_tool(selection_tool){}//******************************************VOID	C_PALETTE::FinishCreateSelf(){	its_table_p = (LTable  *)FindPaneByID(pal_icon_table_rid);		its_popup_p = (LPopupButton  *)FindPaneByID(pal_nd_tool_popup_rid);	its_swatch_p = (C_COLOR_SWATCH  *)FindPaneByID(pal_swatch_rid); 	// Activate RidL resource.   	UReanimator::LinkListenerToControls(this, this, pal_ridl);	}//******************************************C_PALETTE::~C_PALETTE(){	//its SuperCommander defined in C_APP::create_pal()	((C_APP  *)GetSuperCommander())->finish_palette_closing();}#pragma mark --popup related--		//******************************************USHORT	C_PALETTE::get_cur_popup_item()const{	if(its_popup_p!=0){		return its_popup_p->GetValue();	}else{		return 1;	}}//******************************************VOID	C_PALETTE::ListenToMessage(MessageT  	inMessage,		//inVOID  * 	ioParam )		//i-o{	//MONITOR_THE_CHANGE_HERE		switch(inMessage){		case msg_pal_nd_tool_popup:			// for standard popup: inMessage = pane id, *ioParam = current item 			USHORT   item = *((SInt32  *)ioParam);						its_cur_tool = (PALETTE_TOOL)(SHORT(first_nd_tool) + item -1);			TableCellT  cell;			its_table_p->GetTableSize(cell.row, cell.col); 			//no need to do C_ICON_TABLE::SelectCell() and reset cur tool			its_table_p->LTable::SelectCell(cell);			//last call won't redraw if cell already selected						its_table_p->Refresh();			break;	}}