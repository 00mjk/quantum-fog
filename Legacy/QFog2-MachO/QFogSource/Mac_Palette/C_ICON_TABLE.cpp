#include "C_ICON_TABLE.h"#include "C_PALETTE.h"#pragma mark --creation/destruction--//******************************************C_ICON_TABLE::C_ICON_TABLE(LStream  *	inStream)	//in	:LTable(inStream){}#pragma mark --about one cell--//******************************************VOID	C_ICON_TABLE::DrawCell(const TableCellT  &		in_cell)	//in{//drawer	Rect	frame;	FetchLocalCellFrame(in_cell, frame);	::InsetRect(&frame, 4, 4);	/*	//old way of doing:	Handle	icon_h = ::GetResource('ics#', 700 + 10*in_cell.row);	//destroy_h: in this method	ThrowIfResFail_(icon_h);		BitMap 	icon_map;	::HLock(icon_h);//no need to save handle state as will be destroying handle soon	icon_map.baseAddr = *icon_h;	icon_map.rowBytes = 2;		::SetRect(&icon_map.bounds, 0, 0, 16, 16);	::CopyBits(		&icon_map, //source bitmap		&qd.thePort->portBits, //destination bitmap		&icon_map.bounds, // source frame		&frame, // destination frame		srcCopy, //transfer mode		0); // clip region; 0= not needed	ReleaseResource_(icon_h);*///learned about ::PlotIconID() from LSmallIconTable::DrawCell()	if(in_cell.row!=mRows){		::PlotIconID(&frame, atNone, ttNone, 1100 + 10*in_cell.row);	}else{//in_cell.row==mRows		C_PALETTE  *  pal_p = (C_PALETTE  *)GetSuperView();		USHORT	popup_item = pal_p->get_cur_popup_item();//1 based		::PlotIconID(&frame, atNone, ttNone, 1100 + 10*(mRows + popup_item -1 ));	}}//******************************************VOID	C_ICON_TABLE::SelectCell(const TableCellT  &		in_cell)	//in{	LTable::SelectCell(in_cell);	C_PALETTE  *  pal_p = (C_PALETTE  *)GetSuperView();	if(in_cell.row!=mRows){		pal_p->set_cur_tool((PALETTE_TOOL)in_cell.row);	}else{//in_cell.row==mRows		USHORT	popup_item = pal_p->get_cur_popup_item();//1 based		pal_p->set_cur_tool((PALETTE_TOOL)(SHORT(first_nd_tool) + popup_item -1 ));	}}		