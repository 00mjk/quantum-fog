#pragma once#include "QFog_constants.h"#include "C_COLOR_SWATCH.h"enum PALETTE_TOOL { no_tool=0,	selection_tool=1, drag_tool, open_tool,	rotation_tool, paint_tool, copy_color_tool, 	arrow_tool,  arrow_source_tool,	beam_spl_tool,	custom_nd_tool,	det_nd_tool,	pol_rot_tool,	polarizer_tool,	qbit_rot_tool,	sg_magnet_tool	};			//bi_nd selector is NOT a palette tool: 	//a palette tool is global over documents, but a bi node tool isn't!const PALETTE_TOOL 	first_nd_tool = beam_spl_tool;//For inspiration, see CSimplePalette in WindDiag PP example//******************************************class	C_PALETTE : public LWindow, public LListener{protected:	LTable  *   		its_table_p;	LPopupButton  *	its_popup_p;	C_COLOR_SWATCH  * 	its_swatch_p;	PALETTE_TOOL  		its_cur_tool;public:	C_PALETTE(LStream  * inStream);	C_PALETTE();	VOID	FinishCreateSelf();	virtual   ~C_PALETTE();	PALETTE_TOOL 		get_cur_tool();	VOID 				set_cur_tool(PALETTE_TOOL tool);	const RGBColor  & 	get_cur_color();	VOID 				set_cur_color(const RGBColor  &  color);		USHORT	get_cur_popup_item() const;	VOID	ListenToMessage(MessageT  	inMessage, VOID  * 	ioParam );			};#pragma mark -//******************************************inlinePALETTE_TOOL	C_PALETTE::get_cur_tool(){		return 	its_cur_tool;}//******************************************inlineVOID	C_PALETTE::set_cur_tool(PALETTE_TOOL	tool)	//in{	its_cur_tool = tool;}//******************************************inlineconst RGBColor  & 	C_PALETTE::get_cur_color(){	return	its_swatch_p->get_cur_color();}//******************************************inlineVOID 	C_PALETTE::set_cur_color(const RGBColor  & color)	//in{	its_swatch_p->set_cur_color(color);}