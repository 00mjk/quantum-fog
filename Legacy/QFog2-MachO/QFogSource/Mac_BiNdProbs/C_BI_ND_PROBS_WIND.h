#pragma once#include "QFog_constants.h"#include "C_TOP_PTRS.h"class 	C_BI_ND_PROBS_TABLE;class 	C_BI_ND_PROBS_MARGIN;//******************************************class C_BI_ND_PROBS_WIND : public LWindow, public LListener, public LPeriodical, public C_TOP_PTRS{private:	USHORT 		its_bi_nd_id; // this is the location selected in the list. It's zero based		LCaption  * 		its_owner_cap_p;	LCaption  * 		its_info_cap_p;	LPopupButton  * 	its_popup_p;	LStdButton  * 		its_first_but_p;	LStdButton  *		its_next_but_p;		LCaption  * 		its_bi_nd_state_cap_p;		C_BI_ND_PROBS_TABLE  * 		its_table_p;	C_BI_ND_PROBS_MARGIN  * 	its_left_margin_p;	C_BI_ND_PROBS_MARGIN  * 	its_top_margin_p;			STableCell  its_t_cell[3];  //t= touched	enum WHICH_TABLE{left_ta, top_ta, main_ta};			public:	C_BI_ND_PROBS_WIND(LStream  * inStream);	C_BI_ND_PROBS_WIND();	virtual   ~C_BI_ND_PROBS_WIND();	VOID 	init_popup();	VOID 	show_owner( const LStr255  &  file_name);	VOID 	special_finish_create(const LStr255  & file_name, USHORT sel_loc);	VOID	refresh_info_cap();		VOID 	set_bi_nd_always(USHORT  new_loc);	VOID 	set_bi_nd_if_diff(USHORT  new_loc);		VOID 	ListenToMessage(MessageT  inMessage, VOID  * ioParam );	VOID	refresh_bi_nd_state_cap(const WHICH_TABLE  &   table);	VOID	SpendTime(const EventRecord & inMacEvent );		};#pragma mark -//******************************************inlineVOID	C_BI_ND_PROBS_WIND::set_bi_nd_if_diff(USHORT  	new_id)			//in{	if(its_bi_nd_id !=new_id)set_bi_nd_always(new_id);}         