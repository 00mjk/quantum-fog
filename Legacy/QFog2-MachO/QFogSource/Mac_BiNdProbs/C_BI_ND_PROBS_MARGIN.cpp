#include "C_BI_ND_PROBS_MARGIN.h"#include "QB_NET.h"#include "StCPTstate.h"#pragma mark --creation/destruction--//******************************************C_BI_ND_PROBS_MARGIN::C_BI_ND_PROBS_MARGIN(LStream  *	inStream)	//in	:LTableView(inStream){}	//******************************************C_BI_ND_PROBS_MARGIN::C_BI_ND_PROBS_MARGIN(){}//******************************************C_BI_ND_PROBS_MARGIN::~C_BI_ND_PROBS_MARGIN(){}#pragma mark --about one cell--//******************************************VOID	C_BI_ND_PROBS_MARGIN::DrawCell(const STableCell  & 	inCell,		//inconst Rect  &	inLocalRect)		//in{//drawer	StCPTstate	saved_st(true, true, true);	saved_st.Normalize();		::MoveTo(inLocalRect.left + 4, inLocalRect.bottom - 4);		LStr255	pstr;	Rect   	cell_rect;	USHORT  nd1, nd2;	its_net_p->get_bi_nd(its_bi_nd_id, nd1, nd2);	if(its_side==top_sd){		NODE  * 	nd2_p = its_net_p->get_nd_ptr(nd2);		USHORT 		nd2_st=inCell.col-1;		nd2_p->get_st_name(nd2_st).fill_LStr255(pstr);		trunc_pstr_so_it_fits(pstr, GetColWidth(inCell.col), 8);		::DrawString(pstr);	//	::MoveTo(inLocalRect.right, inLocalRect.top);	//	::LineTo(inLocalRect.right, inLocalRect.bottom);		cell_rect = inLocalRect;		cell_rect.right++;		::FrameRect(&cell_rect);	}else{//its_side = left_sd		NODE  * 	nd1_p = its_net_p->get_nd_ptr(nd1);		USHORT 		nd1_st = inCell.row -1;		nd1_p->get_st_name(nd1_st).fill_LStr255(pstr);		trunc_pstr_so_it_fits(pstr, GetColWidth(inCell.col), 8);		::DrawString(pstr);	//	::MoveTo(inLocalRect.left, inLocalRect.bottom);	//	::LineTo(inLocalRect.right, inLocalRect.bottom);		cell_rect= inLocalRect;		cell_rect.bottom++;		::FrameRect(&cell_rect);	}	}//******************************************BOOLEAN		C_BI_ND_PROBS_MARGIN::get_touched_cell(STableCell  &  t_cell)		//out{	FocusDraw();		Point	local_coords;	::GetMouse( &local_coords );			SPoint32		image_coords;	LocalToImagePoint(local_coords, image_coords);	return GetCellHitBy(image_coords, t_cell) && ImagePointIsInFrame(image_coords.h, image_coords.v);}//******************************************/*VOID	C_BI_ND_PROBS_MARGIN::DrawSelf(){//drawer		LTableView::DrawSelf();		Rect  frame;//	didn't work://	CalcLocalFrameRect(frame);//	::FrameRect(&frame); //	::InsetRect(&frame, 1, 1);//	::EraseRect(&frame);	Rect frame;	CalcPortFrameRect(frame);	::InsetRect(&frame, -1, -1);	GetSuperView()->FocusDraw();	::FrameRect(&frame);	FocusDraw();}*/#pragma mark --about many cells--//******************************************VOID	C_BI_ND_PROBS_MARGIN::set_bi_nd_always(USHORT new_id)		//in{	USHORT  nd1, nd2;	its_net_p->get_bi_nd(new_id, nd1, nd2);	its_bi_nd_id =new_id;	UInt32  num_of_rows, num_of_cols;		GetTableSize(num_of_rows, num_of_cols);	if(its_side==top_sd){		if(num_of_cols != 0 ){			RemoveCols(				num_of_cols, //how many				1, //starting with col				true);//refresh			}		num_of_cols = its_net_p->get_nd_ptr(nd2)->get_degen();			InsertCols(			num_of_cols,//how many			0, //after which row			0, //data pointer			0, //data size 			true); //refresh	}else{//its_side = left_sd		if(num_of_rows != 0){			RemoveRows(				num_of_rows, //how many				1, //starting with row				true);//refresh			}		num_of_rows = its_net_p->get_nd_ptr(nd1)->get_degen();			InsertRows(			num_of_rows,//how many			0, //after which row			0, //data pointer			0, //data size 			true); //refresh	}				Refresh();}