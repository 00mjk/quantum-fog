#include  	"C_NET_QTABLE.h"#include 	"STRINGY.h"#include	"QB_NET.h"#include	"DICTIONARY.h"#pragma mark --creation/destruction--//******************************************C_NET_QTABLE::C_NET_QTABLE(LStream 	 *	inStream )		//in	:C_QTABLE(inStream){}//******************************************C_NET_QTABLE::~C_NET_QTABLE(){}//******************************************VOID	C_NET_QTABLE::finish_create(USHORT			num_of_rows,//inUSHORT			nd,			//in		QTABLE_TYPE		qttype,		//inC_DOC  *  		doc_p,		//inC_MAIN_VIEW  *  mview_p,	//inQB_NET  *  		net_p)		//in{	set_num_of_rows(num_of_rows);	its_nd = nd;	its_qttype = qttype;	this->set_top_ptrs(doc_p, mview_p, net_p);}#pragma mark --constant methods--//******************************************VOID	C_NET_QTABLE::get_alphabetic_map(UI_MAP  &	map)		//i-o{	NODE  *  nd_p;	switch(its_qttype){		case nd_qttype:			its_net_p->create_nd_name_dictionary();				its_net_p->get_dict().get_map(map);			its_net_p->kill_nd_name_dictionary();			break;		case parent_qttype:			ThrowIf_(mRows==0);			nd_p = its_net_p->get_nd_ptr(its_nd);			const STRINGY	 *  * 	pa_names_p_p = new const STRINGY  * [mRows]; //new[]			//delete: in this method			ThrowIfNil_(pa_names_p_p);						NODE  * 	in_nd_p;			for(USHORT i=0; i< mRows; i++){				in_nd_p = its_net_p->get_nd_ptr(nd_p->get_in_nds()[i]);				pa_names_p_p[i] = &(in_nd_p->get_name());			}			DICTIONARY	 *  pa_name_dict_p = new DICTIONARY(pa_names_p_p, mRows);			//delete: in this method			ThrowIfNil_(pa_name_dict_p);						pa_name_dict_p->get_map(map);						delete [] pa_names_p_p;			pa_names_p_p = 0;			delete pa_name_dict_p;			pa_name_dict_p = 0;			break;		case nd_state_qttype:			nd_p = its_net_p->get_nd_ptr(its_nd);			nd_p->create_dict();			nd_p->get_dict().get_map(map);			nd_p->kill_dict();			break;			}}//******************************************VOID	C_NET_QTABLE::get_cell_data(const TableCellT  &		cell,		//inLStr255  &				str)		//i-o{	NODE  *  	nd_p;	STRINGY		stringy;	USHORT		in_nd;	switch(its_qttype){		case nd_qttype:			stringy = its_net_p->get_nd_name(its_map.its_oldfn[cell.row -1]);			stringy.fill_LStr255(str);			break;		case parent_qttype:			nd_p = its_net_p->get_nd_ptr(its_nd);			in_nd = nd_p->get_in_nds()[its_map.its_oldfn[cell.row-1]];			its_net_p->get_nd_ptr(in_nd)->get_name().fill_LStr255(str);			break;		case nd_state_qttype:			nd_p = its_net_p->get_nd_ptr(its_nd);			nd_p->get_st_name(its_map.its_oldfn[cell.row -1]).fill_LStr255(str);			break;	}		}