#include "C_PI_ND_POPUP.h"#include "C_PI_WIND.h"#include "QB_NET.h"#pragma mark --creation/destruction--//******************************************C_PI_ND_POPUP::C_PI_ND_POPUP(LStream  *		inStream)	//in	:LPopupButton(inStream){}//******************************************C_PI_ND_POPUP::~C_PI_ND_POPUP(){}#pragma mark --refresh--//******************************************VOID	C_PI_ND_POPUP::change_items(){		MenuHandle		menu_h = GetMacMenuH();	//destroy_h: by PP	ThrowIfNil_(menu_h);	SInt16  num_of_items = ::CountMenuItems(menu_h);	for(SInt16 menu_item =1; menu_item<= num_of_items; menu_item++){		::DeleteMenuItem(menu_h, 1);	}	//replacing the above by DeleteAllMenus() caused crash (maybe because	//must stop broadcasting while calling it?	NODE  *   nd_p;	for(USHORT nd=0; nd < its_net_p->get_num_of_nds(); nd++){		nd_p = its_net_p->get_nd_ptr(nd); 	      	// Add the item      	// Insert a dummy item, then rename it so special chars are not a problem		::AppendMenu(menu_h, "\pdummy");		LStr255 	descriptor_pstr;		nd_p->get_name().fill_LStr255(descriptor_pstr);		if(descriptor_pstr[0]!=0)::SetMenuItemText( menu_h, nd+1 , descriptor_pstr );	}	SetMinValue(1);   	SetMaxValue(its_net_p->get_num_of_nds());   		C_PI_WIND  *   wind_p = (C_PI_WIND  *)GetSuperView();	StopBroadcasting(); 	SetValue( wind_p->get_nd() +1); 	StartBroadcasting();	 }//******************************************VOID	C_PI_ND_POPUP::ClickSelf(const SMouseDownEvent  &  inMouseDown)	//in{	//MONITOR_THE_CHANGE_HERE		change_items();	LPopupButton::ClickSelf(inMouseDown);}	