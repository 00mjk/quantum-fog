#include "C_PI_PA_ST_POPUP.h"#include "C_PI_PARENTS_TABLE.h"#include "QB_NET.h"#pragma mark --creation/destruction--//******************************************C_PI_PA_ST_POPUP::C_PI_PA_ST_POPUP(LStream  *		inStream)	//in	:LPopupButton(inStream){}//******************************************C_PI_PA_ST_POPUP::C_PI_PA_ST_POPUP(const SPaneInfo&	inPaneInfo,			//inMessageT			inValueMessage,		//inSInt16				inTitleOptions,		//inResIDT				inMENUid,			//inSInt16				inTitleWidth,		//inSInt16				inKind,				//inResIDT				inTextTraitsID,		//inConstStringPtr		inTitle,			//inOSType				inResTypeMENU,		//inSInt16				inInitialMenuItem,	//inClassIDT			inImpID,			//inUSHORT				table_row,			//inC_DOC  *			doc_p,				//inC_MAIN_VIEW  * 		mview_p,			//inQB_NET	 *			net_p)				//in	:LPopupButton(		inPaneInfo,		inValueMessage,		inTitleOptions,		inMENUid,		inTitleWidth,		inKind,		inTextTraitsID,		inTitle,		inResTypeMENU,		inInitialMenuItem,		inImpID),	its_table_row(table_row){	set_top_ptrs(doc_p, mview_p, net_p);}//******************************************C_PI_PA_ST_POPUP::~C_PI_PA_ST_POPUP(){}#pragma mark --refresh--//******************************************VOID	C_PI_PA_ST_POPUP::change_items(){		MenuHandle		menu_h = GetMacMenuH();	//destroy_h: by PP	ThrowIfNil_(menu_h);		SInt16  num_of_items = ::CountMenuItems(menu_h);	for(SInt16 menu_item =1; menu_item<= num_of_items; menu_item++){		::DeleteMenuItem(menu_h, 1);	}	NODE  * 	nd_p = its_net_p->get_nd_ptr(its_nd);	USHORT		degen = nd_p->get_degen();		LStr255  	descriptor;	for(USHORT i=0; i < degen; i++){      	// Add the item      	// Insert a dummy item, then rename it so special chars are not a problem		::AppendMenu(menu_h, "\pdummy");		nd_p->get_st_name(i).fill_LStr255(descriptor);		if(descriptor[0]!=0)::SetMenuItemText( menu_h, i+1 , descriptor );	}	SetMinValue(1);   	SetMaxValue(degen);		C_PI_PARENTS_TABLE  *   table_p = (C_PI_PARENTS_TABLE  *)GetSuperView();	StopBroadcasting(); 	SetValue( table_p->get_in_nd_st(its_table_row)  + 1); 	//mValue is 1 based 	StartBroadcasting();   	 }//******************************************VOID	C_PI_PA_ST_POPUP::ClickSelf(const SMouseDownEvent  &  inMouseDown)	//in{	//MONITOR_THE_CHANGE_HERE		change_items();	LPopupButton::ClickSelf(inMouseDown);}	