//******************************************// Purpose: To define an array list. // The list will dwell in the heap.//******************************************#pragma once#include <stdlib.h>//contains exit()//Ref. on template friends: post on newsgroups by Dave Meyer//forward class declaration of templatetemplate<class TYPE> class VECTOR; //forward function declaration of friend  to betemplate<class TYPE> BOOLEAN	operator!=(const  VECTOR<TYPE>  & s1, const VECTOR<TYPE>  &  s2);template<class TYPE> BOOLEAN	operator==(const  VECTOR<TYPE>  & s1, const VECTOR<TYPE>  &  s2);#ifdef   _mac_gui_app //''''''''''''''''''''''''''''''''''''''''''''\\.	template<class TYPE> LStream  &	operator<<(LStream & out_bd, const VECTOR<TYPE>  &	v);	template<class TYPE> LStream  &	operator>>(LStream  & in_bd, VECTOR<TYPE>  & v);#endif //_mac_gui_app \\............................................////******************************************template<class TYPE>class VECTOR{   protected:	TYPE  *		its_array_p;  	USHORT		its_len;  // len = lengthpublic:	VOID	clear();	VOID	copy( const VECTOR<TYPE>  &  s);	VOID	set_to_default_vec(const TYPE  & default_value, USHORT len);	VOID	resize(const TYPE  & default_value, USHORT new_len );		VECTOR();	VECTOR(const TYPE  & default_value, USHORT len);	VECTOR(  const  VECTOR<TYPE>  &  s );	VECTOR<TYPE>  &		operator=( const VECTOR<TYPE>  & rhs );	virtual ~VECTOR();		USHORT  get_len() const;				USHORT  loc_of_target(const TYPE  &  tar) const; 	TYPE  & operator[](USHORT i) const;	VOID  	insert_last(const TYPE  & data);	VOID  	insert_ptr_last( TYPE data);		VOID  	extract_at(USHORT loc);			friend BOOLEAN	operator==<TYPE>(const  VECTOR<TYPE>  & s1, const VECTOR<TYPE>  &  s2);	friend BOOLEAN	operator!=<TYPE>(const  VECTOR<TYPE>  & s1, const VECTOR<TYPE>  &  s2);#ifdef   _mac_gui_app //''''''''''''''''''''''''''''''''''''''''''''\\.	friend LStream  & operator<< <TYPE>( LStream  & out_bd, const VECTOR<TYPE>  & v);	friend LStream  & operator>> <TYPE>( LStream  & in_bd, VECTOR<TYPE>  &  v);		#endif //_mac_gui_app \\............................................//};//CW likes "VECTOR_FRIENDS.h" in header file//gcc likes "VECTOR_FRIENDS.h" in implemetation file#include "VECTOR_FRIENDS.h"