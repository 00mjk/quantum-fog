//******************************************template<class TYPE>BOOLEAN		operator==(const  VECTOR<TYPE>  & 	s1,			//in	const VECTOR<TYPE>  &  	s2)			//in{	if(s1.its_len != s2.its_len)return false;	USHORT len = s1.its_len;	for(USHORT i=0; i<len; i++){		if(s1.its_array_p[i] != s2.its_array_p[i])return false;	}	return true;}//******************************************template<class TYPE>BOOLEAN		operator!=(const  	VECTOR<TYPE>  &		s1,		//inconst	VECTOR<TYPE>  &		s2)		//in{	return !(s1==s2);}		#pragma mark ----used only with macgui----#ifdef   _mac_gui_app //''''''''''''''''''''''''''''''''''''''''''''\\.#pragma mark --i/o--//******************************************template<class TYPE>LStream  &		operator<<(LStream  &				out_bd,		//i-oconst VECTOR<TYPE>  &	v)			//in{	out_bd << v.its_len;//write_net	for(USHORT	i=0; i<v.its_len; i++){		out_bd << v[i];//write_net	}	return out_bd;}//******************************************template<class TYPE>LStream  &		operator>>(LStream  &			in_bd,			//i-oVECTOR<TYPE>  &		v)				//in { 	USHORT 	len;	in_bd >> len;//read_net	TYPE	x;	v.resize(x, len); 	for(USHORT	i=0; i<len; i++){		in_bd >> v[i];//read_net	}	return in_bd;}#endif //_mac_gui_app \\............................................//