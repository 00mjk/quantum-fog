#pragma once//******************************************class SET{private:	USHORT		its_num_of_elems;	USHORT		its_num_of_comps; //always >= 1	LONG  * 	its_array_p;	public:	VOID 	clear();	VOID 	copy(const SET  &  s);	VOID	empty();		VOID	resize(USHORT max_num_of_elems);	SET();	SET(USHORT max_num_of_elems);			SET(const  SET  &  s );	SET  & operator=( const SET  & rhs );	virtual ~SET();	USHORT		get_num_of_elems() const;		BOOLEAN 	contains(USHORT  elem) const;		BOOLEAN 	extract(USHORT elem);		BOOLEAN 	insert(USHORT elem);	#ifdef   _mac_gui_app //''''''''''''''''''''''''''''''''''''''''''''\\.	friend LStream  & operator<<( LStream  & out_bd, const SET  & set);	friend LStream  & operator>>( LStream  & in_bd, SET  &  set);#endif //_mac_gui_app \\............................................//		 };#pragma mark -//******************************************inlineUSHORT	SET::get_num_of_elems() const{	return 	its_num_of_elems;}