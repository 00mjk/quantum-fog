#pragma onceclass	C_DOC;class	C_MAIN_VIEW;class	QB_NET;class  C_TOP_PTRS{protected:	C_DOC   * 		its_doc_p;	C_MAIN_VIEW  *  its_mview_p;	QB_NET  *  		its_net_p;public:	C_TOP_PTRS();	virtual ~C_TOP_PTRS();		VOID 	set_top_ptrs(C_DOC  *  doc_p, C_MAIN_VIEW  *  mview_p, QB_NET  *  net_p);	VOID 	get_top_ptrs(C_DOC  *  & doc_p, C_MAIN_VIEW  *  &  mview_p, QB_NET  *  & net_p) const;};/*C_TOP_PTRS object will always be initialized either(1)using set_top_ptrs()(2)using get_top_ptrs().It doesn't matter how it isinitialized as long as it is initializedsoon after it is created.Our policy: set_top_ptrs() and get_top_ptrs()are called shortly after C_TOP_PTRS object is created,from inside a constructor orfrom inside a method with the sub-stringfinish_create or FinishCreate in its name.Windows call their supercommander to get_top_ptrs(),and then they call their subcommanders to set_top_ptrs().A list of all classes that inherit from C_TOP_PTRSOn the RHS, we indicate how C_TOP_PTRS object is initialized.C_BI_ND_PROBS_MARGIN 	set_top_ptrsC_BI_ND_PROBS_TABLE  	set_top_ptrsC_BI_ND_PROBS_WIND		GetSuperCommander()->get_top_ptrs()C_BI_ND_LBOX  			set_top_ptrsC_BI_ND_WIND  			GetSuperCommander()->get_top_ptrs()C_NET_DEL_OR_CUT_ACTION set_top_ptrsC_ND_PROBS_TABLE 		set_top_ptrsC_ND_PROBS_WIND			GetSuperCommander()->get_top_ptrs()C_PI_AMPS_TABLE 		set_top_ptrsC_PI_ND_POPUP 			set_top_ptrsC_PI_PARENTS_TABLE 		set_top_ptrsC_PI_PA_ST_POPUP		set_top_ptrsC_PI_WIND				GetSuperCommander()->get_top_ptrs()C_NET_QTABLE 			set_top_ptrsC_STORIES_WIND			GetSuperCommander()->get_top_ptrs()*/