#pragma once#include 	"STRINGY.h"VOID 	my_gen_alert(const STRINGY  & 	stringy);//comments in next ifdef confuses compiler#ifdef   _mac_gui_app //''''''''''''''''''''''''''''''''''''''''''''\\.	VOID	amp_generator_found_no_states_alert();	VOID 	only_allowed_in_initial_run_state_alert();#endif //_mac_gui_app \\............................................////******************************************class	IO_EXCEPTION{protected:public:	IO_EXCEPTION();	virtual ~IO_EXCEPTION();	virtual VOID  print_error(const STRINGY  & file_name, USHORT line_num) const;};//******************************************class	UNLISTED_NODE: public IO_EXCEPTION{private:	STRINGY			its_nd_name;public:	UNLISTED_NODE(const STRINGY  & stringy);	virtual ~UNLISTED_NODE();	virtual VOID  print_error(const STRINGY  & file_name, USHORT line_num) const;};//******************************************class	UNLISTED_STATE: public IO_EXCEPTION{private:	STRINGY 	its_nd_name;	STRINGY 	its_st_name;public:	UNLISTED_STATE(const STRINGY  & nd_name, const STRINGY  & st_name);	virtual ~UNLISTED_STATE();	virtual VOID  print_error(const STRINGY  & file_name, USHORT line_num) const;};//******************************************class	UNLISTED_IN_NODE: public IO_EXCEPTION{private:	STRINGY 	its_nd_name;	STRINGY 	its_in_nd_name;public:	UNLISTED_IN_NODE(const STRINGY  & nd_name, const STRINGY  & in_nd_name);	virtual ~UNLISTED_IN_NODE();	virtual VOID  print_error(const STRINGY  & file_name, USHORT line_num) const;};//******************************************class	ILLEGAL_NAME: public IO_EXCEPTION{private:	STRINGY 	its_name;public:	ILLEGAL_NAME(const STRINGY  & stringy);	virtual ~ILLEGAL_NAME();	virtual VOID  print_error(const STRINGY  & file_name, USHORT line_num) const;};//******************************************class	ZERO_DEGEN: public IO_EXCEPTION{private:	STRINGY 	its_nd_name;public:	ZERO_DEGEN(const STRINGY  & stringy);	virtual ~ZERO_DEGEN();	virtual VOID  print_error(const STRINGY  & file_name, USHORT line_num) const;};//******************************************class	WRONG_PATTERN: public IO_EXCEPTION{private:public:	WRONG_PATTERN();	virtual ~WRONG_PATTERN();	virtual VOID  print_error(const STRINGY  & file_name, USHORT line_num) const;};//******************************************class	ILLEGAL_AMP: public IO_EXCEPTION{private:	DOUBLE 	its_x;	DOUBLE	its_y;public:	ILLEGAL_AMP(const DOUBLE  & x, const DOUBLE  & y);	virtual ~ILLEGAL_AMP();	virtual VOID  print_error(const STRINGY  & file_name, USHORT line_num) const;};