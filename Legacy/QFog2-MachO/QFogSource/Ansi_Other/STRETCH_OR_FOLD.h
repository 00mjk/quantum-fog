//******************************************// Purpose: To define class that translates integer labels// to vector labels (folding) or vice-versa (stretching).//******************************************#pragma once#include "VECTOR.h"#include "UI_MAP.h"//******************************************class STRETCH_OR_FOLD{private:	VECTOR<USHORT>	its_degens; 	USHORT			its_len;	LONG			its_num_of_vecs;public:		VOID	copy(const STRETCH_OR_FOLD  &  s);	VOID 	init(const VECTOR<USHORT>  &  degens);	STRETCH_OR_FOLD();	STRETCH_OR_FOLD(const VECTOR<USHORT>  &  degens);	STRETCH_OR_FOLD(const STRETCH_OR_FOLD  &  s);	virtual ~STRETCH_OR_FOLD();	USHORT	get_len() const;		LONG	get_num_of_vecs() const;	VECTOR<USHORT> vec_label(LONG int_label) const;	LONG int_label(const VECTOR<USHORT>  & vec_label) const;	VOID	reorder_degens(const UI_MAP  &	 map);};#pragma mark -//******************************************inlineUSHORT	STRETCH_OR_FOLD::get_len() const{	return its_len;}//******************************************inlineLONG	STRETCH_OR_FOLD::get_num_of_vecs() const{	return its_num_of_vecs;}