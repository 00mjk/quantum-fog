#pragma once#include "QFog_constants.h"//******************************************class	C_ND_EFIELD : public LEditField, public LBroadcaster{protected:	USHORT  its_nd;	enum { left_margin = 5}; // left and right margins will be the same		// PowerPlant sets top_magin sets equal to height -ascentpublic:		C_ND_EFIELD(LStream  * inStream);	C_ND_EFIELD();	virtual   ~C_ND_EFIELD();	C_ND_EFIELD(		const SPaneInfo	&	inPaneInfo,		Str255				in_pstr,		ResIDT				inTextTraitsID,		SInt16				inMaxChars,		BOOLEAN				inHasBox,		BOOLEAN				inHasWordWrap,		TEKeyFilterFunc		inKeyFilter,		LCommander	*		inSuper);	VOID	FinishCreateSelf();		USHORT  get_nd();	VOID  	set_nd_always(USHORT  nd);		SInt16  	get_fnum();	VOID	set_fnum(SInt16 fnum);		SInt16 	get_font_size();	VOID	set_fsize(SInt16 fsize);		SInt16	get_TE_width() const;	SInt16	get_TE_height() const;	SInt16	get_TE_ascent() const;	VOID  	calc_state_cap_frame(Rect  &  frame) const;			VOID 	UserChangedText();		VOID	DrawBox();		VOID	undraw();	VOID	EnableSelf();	VOID	DisableSelf();		VOID	SpendTime( const EventRecord	&	inMacEvent );		};#pragma mark -//******************************************inlineUSHORT  C_ND_EFIELD::get_nd(){	return its_nd;}//******************************************inlineVOID  	C_ND_EFIELD::set_nd_always(USHORT  nd)		//in{	its_nd= nd;}//******************************************inlineSInt16	C_ND_EFIELD::get_fnum(){	return (**mTextEditH).txFont;}//******************************************inlineSInt16	C_ND_EFIELD::get_font_size(){	return (**mTextEditH).txSize;}//******************************************inlineSInt16	C_ND_EFIELD::get_TE_height() const{	return (**mTextEditH).lineHeight;}//******************************************inlineSInt16	C_ND_EFIELD::get_TE_ascent() const{	return (**mTextEditH).fontAscent;}