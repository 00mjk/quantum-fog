#pragma once #include "QFog_constants.h"#include "C_PORT_RELATED.h"#include "C_ARROW_DRAWER.h"#include "C_COLORS.h"#include "GLOBAL_FUN.h"#include "UI_MAP.h"class C_MAIN_VIEW;//******************************************class C_ARROW{private:	LView  * 		its_mview_p;	C_PORT_NAME 	its_s_port_name;	C_PORT_NAME 	its_d_port_name;	Point  			its_init_pt, its_fin_pt;	BOOLEAN 		its_is_selected;	enum {arrowhead_len=16, arrowhead_halfwidth=25};public:	 	C_ARROW();	C_ARROW(LView  *  view_p,			const C_PORT_NAME  &  s_port_name,			const C_PORT_NAME  &  d_port_name,			const Point  &  init_pt,			const Point  &  fin_pt);	virtual   ~C_ARROW();	C_PORT_NAME  	get_s_port_name() const; 	C_PORT_NAME  	get_d_port_name() const; 	const Point  &  get_init_pt() const; 	VOID  			set_init_pt(const Point  & init_pt); 	const Point  &  get_fin_pt() const; 	VOID  			set_fin_pt(const Point  & fin_pt);	VOID			change_source_nd(const C_PORT_NAME  &  s_port_name, const Point  & init_pt, const Point  & fin_pt);		VOID	draw();	VOID	undraw();		VOID	draw_sel_handles_wkr();	VOID	draw_sel_handles();	VOID	undraw_sel_handles();	Boolean		select(C_MAIN_VIEW *  mview_p);	Boolean		unselect(C_MAIN_VIEW *  mview_p);	VOID		toggle_select(C_MAIN_VIEW *  mview_p);		VOID	move_by(const Point  &  delta);	BOOLEAN 			is_selected() const;		BOOLEAN				pt_is_in_sel_dom(const Point  & pt);	VOID				renumber_nds(const UI_MAP  &  map);	friend BOOLEAN  operator==(const C_ARROW  & ar1, const C_ARROW  & ar2);	friend BOOLEAN  operator!=(const C_ARROW  & ar1, const C_ARROW  & ar2);};#pragma mark -//******************************************inlineC_PORT_NAME  C_ARROW::get_s_port_name() const {	return its_s_port_name;}//******************************************inlineC_PORT_NAME  C_ARROW::get_d_port_name() const {	return its_d_port_name;}//******************************************inlineconst Point  &   C_ARROW::get_init_pt() const { 	return its_init_pt;}//******************************************inlineVOID  C_ARROW::set_init_pt(const Point  &		init_pt) 	//in{	its_init_pt = init_pt;}//******************************************inlineconst Point  &  C_ARROW::get_fin_pt() const {	return its_fin_pt;}//******************************************inlineVOID  C_ARROW::set_fin_pt(const Point  &		fin_pt) 	//in{		its_fin_pt = fin_pt;}//******************************************inlineBOOLEAN		C_ARROW::is_selected() const{	return its_is_selected;}//******************************************inlineBOOLEAN  operator!=(const C_ARROW  &	ar1,	//inconst C_ARROW  &	ar2)	//in{	return !(ar1==ar2);}