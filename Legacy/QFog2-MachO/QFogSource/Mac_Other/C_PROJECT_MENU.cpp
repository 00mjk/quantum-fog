#include "C_PROJECT_MENU.h"//Ref: UTextMenu.cp//Ref: CWindowMenu.cp from chap 15 of PP bookLMenu	 *	C_PROJECT_MENU::its_menu_p = 0;MenuHandle	C_PROJECT_MENU::its_mac_menu_h = 0;#pragma mark --const functions--//******************************************C_DOC  * C_PROJECT_MENU::menu_item_to_doc_ptr(SInt16	menu_item )//in{	LDocument * a_doc_p = NULL;	// Get the doc ptr from the list.	LDocument::GetDocumentList().FetchItemAt( menu_item, a_doc_p );	C_DOC  *  doc_p = dynamic_cast<C_DOC*>(a_doc_p);		//may be zero if list is empty or item is out of range		return doc_p;}#pragma mark --modify menu--//******************************************VOID  C_PROJECT_MENU::init(){	its_menu_p = LMenuBar::GetCurrentMenuBar()->FetchMenu(project_menu_rid);	ThrowIfNil_(its_menu_p);	its_mac_menu_h = its_menu_p->GetMacMenuH();	//create_h:		PP creates its_mac_menu_h in LMenu() with call to ::NewMenu() or ::GetMenu()	//throwif_h:	PP throwifs at creation time.	//destroy_h:	PP destroys its_mac_menu_h in ~LMenu()	//::EnableItem(its_mac_menu_h, 0);	apparently un-necessary	ThrowIfNil_(its_mac_menu_h);}//******************************************VOID C_PROJECT_MENU::reset_command_keys(){	SInt16	theItem = 1;	SInt16	theItemCount = ::CountMenuItems( its_mac_menu_h );	SInt16	theCommand = '1';	while ( theItem <= theItemCount && theCommand <= '9' ) {		// Set the menu item command key.		::SetItemCmd( its_mac_menu_h, theItem, theCommand );				++theItem;		++theCommand;	}}//******************************************VOID  C_PROJECT_MENU::insert_doc(const C_DOC  * doc_p ) //in{	Str255	title_pstr;	doc_p->GetDescriptor( title_pstr );		// Insert the window title into the menu as a synthetic item.	// First, insert a blank item, since InsertCommand uses	// the toolbox InsertMenuItem which interprets metacharacters,	// then set the item text manually.	its_menu_p->InsertCommand( "\p ", cmd_UseMenuItem, 16000 );	::SetMenuItemText( its_mac_menu_h, ::CountMenuItems( its_mac_menu_h ), title_pstr );	reset_command_keys();	}//******************************************VOID  C_PROJECT_MENU::rename_doc(const C_DOC  *  doc_p )//in{	Str255	title_pstr;	doc_p->GetDescriptor( title_pstr );	::SetMenuItemText( its_mac_menu_h, doc_ptr_to_menu_item( doc_p ), title_pstr );}//******************************************VOID  C_PROJECT_MENU::remove_doc(const C_DOC  * doc_p )//in{	//This method must be used before doc is removed from document list!	//Check that the doc is in the list	ThrowIf_(LDocument::GetDocumentList().FetchIndexOf( (C_DOC  *)doc_p ) == LArray::index_Bad );		// Remove the item from the menu.	its_menu_p->RemoveItem(LDocument::GetDocumentList().FetchIndexOf( (C_DOC  *)doc_p ));		reset_command_keys();}