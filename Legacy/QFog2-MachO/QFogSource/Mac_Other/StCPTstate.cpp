#ifdef PowerPlant_PCH#include PowerPlant_PCH#endif#include "StCPTstate.h"//	Color State Info://		Foreground Color//		Background Color//	Pen State Info://		Pen Location//		Pen Size//		Pen Mode//		Pen Pattern//	Text State Info://		Font Number//		Text Size//		Text Style//		Text Mode// ===========================================================================StCPTstate::StCPTstate(Boolean		saveC,		//inBoolean		saveP,		//inBoolean		saveT)		//in	:mSaveC(saveC),	mSaveP(saveP),	mSaveT(saveT){	Save();}// ===========================================================================StCPTstate::~StCPTstate(){	Restore();}// ===========================================================================void	StCPTstate::Save(){	if(mSaveC){		::GetForeColor(&mForegroundColor);		::GetBackColor(&mBackgroundColor);	}	if(mSaveP){		::GetPenState(&mPenState);	}	if(mSaveT){		GrafPtr		currPort = UQDGlobals::GetCurrentPort();		mFontNumber	= ::GetPortTextFont(currPort);		mSize		= ::GetPortTextSize(currPort);		mStyle		= ::GetPortTextFace(currPort);		mMode		= ::GetPortTextMode(currPort);	}}// ===========================================================================void	StCPTstate::Restore(){	if(mSaveC){		::RGBForeColor(&mForegroundColor);		::RGBBackColor(&mBackgroundColor);	}	if(mSaveP){		::SetPenState(&mPenState);	}	if(mSaveT){		::TextFont(mFontNumber);		::TextSize(mSize);		::TextFace(mStyle);		::TextMode(mMode);	}}// ===========================================================================void	StCPTstate::Normalize(){	if(mSaveC){		::RGBForeColor(&Color_Black);		::RGBBackColor(&Color_White);	}	if(mSaveP){		::PenNormal();		//means:		//loc	unchanged		//size	1,1		//mode 	patCopy		//pat	black	}	if(mSaveT){		::TextFont(systemFont);//chicago or charcoal = systemFont, geneva = appFont		::TextSize(0);//0 same as 12 point		::TextFace(0);		::TextMode(srcOr);	}}