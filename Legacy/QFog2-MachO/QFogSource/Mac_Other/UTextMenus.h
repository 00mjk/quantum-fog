// ===========================================================================//	UTextMenus.h					©1993 Metrowerks Inc. All rights reserved.// ===========================================================================////	This file contains classes to handle the Font, Size and Style menus//	It relies on the fact that the menu IDs of these menus are MENU_Font//	MENU_Size, and MENU_Style as defined in PP_Resources.h.//#pragma once#include <Menus.h>#include <PP_Prefix.h>class	LMenu;//******************************************class	UTextMenusBase {protected:	static void			XAble(LMenu * inMenu, Boolean inEnable);	static void			XAble(ResIDT inMenuID, Boolean inEnable);	static void			XAble(MenuHandle inMenuH, Boolean inEnable);	static void			XAbleEveryItem(LMenu * inMenu, Boolean inEnable,							Boolean inUnmarkAll, Boolean inSetStyleNormal);	static void			XAbleEveryItem(ResIDT inMenuID, Boolean inEnable,							Boolean inUnmarkAll, Boolean inSetStyleNormal);	static void			XAbleEveryItem(MenuHandle inMenuH, Boolean inEnable,							Boolean inUnmarkAll, Boolean inSetStyleNormal);		static LMenu		*sFontMenu;	static MenuHandle	sFontMenuH;	static LMenu		*sSizeMenu;	static MenuHandle	sSizeMenuH;	static LMenu		*sStyleMenu;	static MenuHandle	sStyleMenuH;};//******************************************class	UFontMenu : public UTextMenusBase {public:	static void		Initialize(Boolean inEnabled = true);	static void		AdjustMenu(SInt16 inCurrentFont);	static void		DisableMenu();	static void		EnableMenu();	static void		DisableEveryItem();	static void		EnableEveryItem();	static SInt16	GetFontNumber(SInt16 inMenuItem);	static SInt16	GetFontItemNumber(SInt16	inFontNumber);};//******************************************class	USizeMenu : public UTextMenusBase {public:	static void		Initialize(SInt16 inReservedItems, Boolean inEnabled = true);	static void		AdjustMenu(SInt16 inMenuItem, SInt16 inCurrentSize, SInt16 inCurrentFont,						Boolean & outEnabled, Boolean & outUsesMark, UInt16 & outMark);	static void		DisableMenu();	static void		EnableMenu();	static void		DisableEveryItem();	static void		EnableEveryItem();	static SInt16	GetFontSize(SInt16 inMenuItem);private:	static SInt16	mReservedItems;};const	SInt16	kDefaultReservedItems = 5;//******************************************class	UStyleMenu : public UTextMenusBase {public:	static void		Initialize(Boolean inEnabled = true);	static void		DisableMenu();	static void		EnableMenu();};