#pragma once#include "QFog_constants.h"//act = action//This class should be used as a mixin with any class X that//hosts an LUndoer attachment. This class provides//a Boolean flag is_modified for each possible LAction of X. //In QFog_constants.h, define an index for each action of X.//The indices must be consecutive integers starting at 0. //******************************************class C_ACTION_FLAGS{protected:	BOOLEAN		its_is_modified[max_num_of_act_types];	USHORT		its_num_of_act_types;public:	C_ACTION_FLAGS(USHORT	num_of_actions);	BOOLEAN		is_modified(USHORT	act_type) const;		VOID   		set_is_modified(BOOLEAN  is_mod, USHORT  act_type);	VOID   		set_is_modified(BOOLEAN  is_mod);};#pragma mark -//******************************************inlineBOOLEAN   C_ACTION_FLAGS::is_modified(USHORT		act_type)			//inconst{	SignalIf_(act_type >= its_num_of_act_types);	return its_is_modified[act_type];}//******************************************inlineVOID   C_ACTION_FLAGS::set_is_modified(BOOLEAN  		is_mod,		//inUSHORT			act_type)	//in{	SignalIf_(act_type >= its_num_of_act_types);	its_is_modified[act_type] = is_mod;	//For is_mod==true, could say PostAction(0) here.}