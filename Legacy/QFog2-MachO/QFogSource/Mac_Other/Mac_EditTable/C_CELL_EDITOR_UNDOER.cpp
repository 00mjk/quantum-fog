#include	"C_CELL_EDITOR_UNDOER.h"#include	"C_EDIT_TABLE.h"//******************************************C_CELL_EDITOR_UNDOER::C_CELL_EDITOR_UNDOER(C_CELL_EDITOR  * editor_p){	its_editor_p = editor_p;}//******************************************C_CELL_EDITOR_UNDOER::~C_CELL_EDITOR_UNDOER(){}//******************************************VOID	C_CELL_EDITOR_UNDOER::ExecuteSelf(MessageT	inMessage,	//invoid *		ioParam)	//i-o{	//When an uaction of the cell editor is created,	//we delete the uaction of the etable.	//Both cell editor and etable	//uactions are destroyed when the pi_window is closed.	switch (inMessage) {		case msg_CommandStatus:{			SCommandStatus * status = (SCommandStatus *) ioParam;					if (mAction==0 && status->command == cmd_Undo) { 				//give etable a chance to handle it				its_editor_p->GetSuperCommander()->ProcessCommand(inMessage, ioParam);			} else {				LUndoer::ExecuteSelf(inMessage, ioParam);			}			break;		}		case cmd_Undo:						if(mAction==0){				//give etable a chance to handle it				its_editor_p->GetSuperCommander()->ProcessCommand(inMessage, ioParam);			}else{				LUndoer::ExecuteSelf(inMessage, ioParam);			}					break;		default:			LUndoer::ExecuteSelf(inMessage, ioParam);			break;	}}