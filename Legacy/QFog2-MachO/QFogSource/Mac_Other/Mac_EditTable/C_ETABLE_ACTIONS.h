#pragma once#include "C_SUB_MATRIX.h"class	C_EDIT_TABLE;class	C_ETABLE_MULTI_SEL;//ETABLE = EDIT_TABLE//uaction = undoing action//******************************************class C_ETABLE_DEL_OR_CUT_ACTION: public LAction{protected:	C_EDIT_TABLE  * 		its_etable_p;	C_ETABLE_MULTI_SEL  *	its_selector_p;	USHORT				its_copy_to_scrap; //0 if no, 1 if yes		C_SUB_MATRIX		its_undel_reco;	Rect				its_saved_sel_rect;public:	C_ETABLE_DEL_OR_CUT_ACTION(C_EDIT_TABLE  *	etable_p, C_ETABLE_MULTI_SEL  * selector_p, USHORT  copy_to_scrap);	virtual   ~C_ETABLE_DEL_OR_CUT_ACTION();		virtual Boolean		CanRedo() const;	virtual Boolean		CanUndo() const;		virtual void		RedoSelf();	virtual void		UndoSelf();};//******************************************class C_ETABLE_PASTE_ACTION: public LAction{protected:	C_EDIT_TABLE  * 	its_etable_p;	C_SUB_MATRIX 		its_aft_paste_reco;		C_SUB_MATRIX		its_bef_paste_reco;public:	C_ETABLE_PASTE_ACTION(C_EDIT_TABLE  *	etable_p, C_SUB_MATRIX  *  aft_paste_reco_p);	virtual   ~C_ETABLE_PASTE_ACTION();		virtual Boolean		CanRedo() const;	virtual Boolean		CanUndo() const;		virtual void		RedoSelf();	virtual void		UndoSelf();};