#include "C_ND_PROBS_TABLE.h"#include "QB_NET.h"#include "StCPTstate.h"#pragma mark --creation/destruction--//******************************************C_ND_PROBS_TABLE::C_ND_PROBS_TABLE(LStream   * inStream)		//in	:LTableView(inStream), its_nd(0){	LTableMultiGeometry  * 	geo_p		 = new LTableMultiGeometry(this, 20 /* cell width */, 20/*cell height*/);	//delete:	in ~LTableView().	ThrowIfNil_(geo_p);	SetTableGeometry(geo_p);		// total width = 280 = 20 + 190 + 70	InsertCols(		3, //how many		0, //after which col		0, //data pointer		0, //data size 		false); //refresh	SetColWidth(		190,//width		2, //from this col		2);//to this col			SetColWidth(		70,//width		3, //from this col		3);//to this col		}//******************************************C_ND_PROBS_TABLE::C_ND_PROBS_TABLE()	:its_nd(0) {}//******************************************C_ND_PROBS_TABLE::~C_ND_PROBS_TABLE(){}#pragma mark --about one cell--//******************************************VOID	C_ND_PROBS_TABLE::DrawCell(const STableCell  &  inCell,		//inconst Rect  &  inLocalRect)			//in{//drawer	StCPTstate	saved_st(true, false, true);	saved_st.Normalize();		::MoveTo(inLocalRect.left + 4, inLocalRect.bottom - 4);	DOUBLE  	num;	LStr255		str;	NODE  *    nd_p = its_net_p->get_nd_ptr(its_nd);	switch(inCell.col){		case 1:			::TextFont(systemFont);			if(nd_p->is_active_state(inCell.row -1)){				str= "\p*";			}else{				str = "\p";			}					break;		case 2:			::TextFont(systemFont);//			::TextFace(bold);			nd_p->get_st_name(inCell.row-1).fill_LStr255(str);			trunc_pstr_so_it_fits(str, GetColWidth(inCell.col), 8);			break;		case 3:				::TextFont(systemFont);			num = nd_p->get_cum_prob(inCell.row-1);			str.Assign(num, FIXEDDECIMAL, 6);			break;	}	::DrawString(str);		draw_cell_frame(inLocalRect);//see GLOBAL_FUN.h}#pragma mark --about many cells--//******************************************VOID	C_ND_PROBS_TABLE::set_nd_always(USHORT 	nd_id)		//in{		its_nd = nd_id;		UInt32  num_of_rows, num_of_cols;	GetTableSize(num_of_rows, num_of_cols);		if(num_of_rows != 0){		RemoveRows(			num_of_rows, //how many			1, //starting with row			true);//refresh	}	num_of_rows = its_net_p->get_nd_ptr(its_nd)->get_degen();		InsertRows(		num_of_rows,//how many		0, //after which row		0, //data pointer		0, //data size 		true); //refresh	Refresh();}